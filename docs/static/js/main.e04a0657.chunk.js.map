{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categorias","categoria","ReactDOM","render","document","getElementById"],"mappings":"6MAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAmB5C,OACI,0BAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAGEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAe,OAOf,2BACAO,KAAK,OACLC,MAAST,EACTU,SArBkB,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,Y,uBCRnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAWH,GAF9C,+DAGKI,MAAMF,GAHX,cAGbG,EAHa,gBAIEA,EAAUC,OAJZ,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEhC,OACI,yBAAKc,UAAY,4CACd,yBAAKC,IAAKf,EAAKgB,IAAKN,IACnB,2BAAIA,KCFHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EAGRd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IALqB,mBAG3BC,EAH2B,KAGpBC,EAHoB,KAuBtC,OAfIC,qBAAU,WAENxB,EAASC,GACRwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKlB,CAACpB,IAIDqB,EDnBwBK,CAAa1B,GAAhCa,EAFyB,EAE9BN,KAAaa,EAFiB,EAEjBA,QAEpB,OACI,oCACA,wBAAIJ,UAAU,8CAAd,IAA6DhB,EAA7D,KAEEoB,GAAW,uBAAGJ,UAAU,uDAAb,cAEb,yBAAKA,UAAa,aAERH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAE,EAAF,eACAiB,IAAKjB,EAAIC,IACJD,UEhBdkB,EAAe,WAAM,MAKE1C,mBAAS,CAAC,YALZ,mBAK3B2C,EAL2B,KAKf5C,EALe,KAU9B,OACI,oCACI,4CAEA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ4C,EAAWpB,KAAI,SAAAqB,GAAS,OACxB,kBAAC,EAAD,CACAH,IAAOG,EACN9B,SAAY8B,UCnBjCC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.e04a0657.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ({setCategorias}) => {\r\n\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const handleInputChange = (e) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n\r\n        if (inputValue.trim().length > 2){\r\n            \r\n            setCategorias(cats => [inputValue, ...cats]); //primero muestra el nuevo valor ingresado y despues lo que ya estaba\r\n            setInputValue ('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n            type=\"text\"\r\n            value = {inputValue}\r\n            onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired \r\n}\r\n","export const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=10&api_key=OGhwCci4Rboj9ypGo7IhnOZHx5xHMDOr`\r\n    const respuesta = await fetch(url);\r\n    const {data} = await respuesta.json()\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n\r\n    return (\r\n        <div className = \"card animate__animated animate__backInUp\">\r\n           <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"card animate__animated animate__backInDown\"> {category} </h3>  \r\n\r\n        { loading && <p className=\"card animate__animated animate__animate__fadeInDown\">Loading...</p>}\r\n\r\n        <div className  = \"card-grid\">\r\n              {\r\n                  images.map( img => (\r\n                      < GifGridItem\r\n                      key={img.id}\r\n                      { ...img }\r\n                      />\r\n                  ))\r\n              }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n       \r\n        const [state, setState] = useState({\r\n            data: [],\r\n            loading: true\r\n        });\r\n\r\n        useEffect(() => {\r\n\r\n            getGifs (category)\r\n            .then (imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            });\r\n\r\n\r\n        }, [category])\r\n\r\n\r\n\r\n    return state;\r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //terminologia: (ol) = order list --- (li) = list item\r\n    //const categorias = ['Dragon Ball', 'Re:Zero', 'My hero Academia'];\r\n\r\nconst [categorias, setCategorias] = useState(['Re:Zero']);\r\n    // const handleAdd =() =>{\r\n    //     setCategorias([...categorias, 'Anime']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n\r\n            <AddCategory setCategorias={setCategorias}/>\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categorias.map(categoria => \r\n                    <GifGrid\r\n                    key = {categoria}\r\n                     category = {categoria} />\r\n                    )\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n\r\n  \r\n\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\n\n\nReactDOM.render(\n    <GifExpertApp />, \n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}